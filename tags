!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!CSS	c,class	/classes/
!_TAG_KIND_DESCRIPTION!CSS	i,id	/identities/
!_TAG_KIND_DESCRIPTION!CSS	s,selector	/selectors/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!CSS	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/adam/code/lura/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
BASE_DIR	test/conftest.py	/^BASE_DIR = Path(__file__).parent.parent$/;"	v
Base	src/lura/utils/buffer.py	/^from plug.qt.utils import Buffer as Base$/;"	Y	nameref:unknown:Buffer
BaseDisplay	src/lura/utils/display.py	/^from gizmo.ui import Display as BaseDisplay$/;"	Y	nameref:unknown:Display
BaseView	src/lura/view/view.py	/^from gizmo.ui import View as BaseView$/;"	Y	nameref:unknown:View
Buffer	src/lura/utils/buffer.py	/^class Buffer(Base):$/;"	c
CanceledForcibly	src/lura/view/rendertask.py	/^    CanceledForcibly=2$/;"	v	class:RenderTask
CanceledForcibly	src/lura/view/rendertask.py	/^CanceledForcibly=2$/;"	v
CanceledNormally	src/lura/view/rendertask.py	/^    CanceledNormally=1$/;"	v	class:RenderTask
CanceledNormally	src/lura/view/rendertask.py	/^CanceledNormally=1$/;"	v
Command mode	README.md	/^### Command mode$/;"	S	section:Lura""Navigation
Cursor	src/lura/view/cursor.py	/^class Cursor(QObject):$/;"	c
Display	src/lura/utils/display.py	/^class Display(BaseDisplay):$/;"	c
DocumentLayout	src/lura/view/layout.py	/^class DocumentLayout:$/;"	c
Hashman	src/lura/utils/hashman.py	/^class Hashman(QtCore.QObject):$/;"	c
Install	README.md	/^## Install$/;"	s	chapter:Lura
Lura	README.md	/^# Lura $/;"	c
Lura	src/lura/main.py	/^class Lura(PlugApp):$/;"	c
LuraCLI	src/lura/cli.py	/^class LuraCLI(Plug):$/;"	c
Navigation	README.md	/^## Navigation$/;"	s	chapter:Lura
Normal mode	README.md	/^### Normal mode$/;"	S	section:Lura""Navigation
NotCanceled	src/lura/view/rendertask.py	/^    NotCanceled=0$/;"	v	class:RenderTask
NotCanceled	src/lura/view/rendertask.py	/^NotCanceled=0$/;"	v
PageItem	src/lura/view/pageitem.py	/^class PageItem(QGraphicsObject):$/;"	c
PdfAnnotation	src/lura/render/annotation.py	/^class PdfAnnotation(QtCore.QObject):$/;"	c
PdfDocument	src/lura/render/document.py	/^class PdfDocument(QtCore.QObject):$/;"	c
PdfPage	src/lura/render/page.py	/^class PdfPage(QtCore.QObject):$/;"	c
QGraphicsObject	src/lura/style.css	/^QGraphicsObject {$/;"	s
QGraphicsScene	src/lura/style.css	/^QGraphicsScene {$/;"	s
QGraphicsView	src/lura/style.css	/^QGraphicsView {$/;"	s
QLabel#Statusbar_colon	src/lura/style.css	/^QLabel#Statusbar_colon {$/;"	i
QLineEdit#Statusbar_edit	src/lura/style.css	/^QLineEdit#Statusbar_edit {$/;"	i
QListWidget#ExecMode_List	src/lura/style.css	/^QListWidget#ExecMode_List {$/;"	i
QListWidget#ExecMode_List QLabel#ListItemUp	src/lura/style.css	/^QListWidget#ExecMode_List QLabel#ListItemUp{$/;"	i
QListWidget#ExecMode_List::item	src/lura/style.css	/^QListWidget#ExecMode_List::item {$/;"	i
QListWidget#ExecMode_List::item:selected	src/lura/style.css	/^QListWidget#ExecMode_List::item:selected {$/;"	i
QSplitter	src/lura/style.css	/^QSplitter {$/;"	s
QWidget	src/lura/style.css	/^QWidget {$/;"	s
RenderTask	src/lura/view/rendertask.py	/^class RenderTask(QObject, QRunnable):$/;"	c
SinglePageLayout	src/lura/view/layout.py	/^class SinglePageLayout:$/;"	c
TileItem	src/lura/view/tileitem.py	/^class TileItem(QObject):$/;"	c
Todos	README.md	/^## Todos$/;"	s	chapter:Lura
Usage	README.md	/^## Usage$/;"	s	chapter:Lura
View	src/lura/view/view.py	/^class View(BaseView):$/;"	c
Visual mode	README.md	/^### Visual mode$/;"	S	section:Lura""Navigation
__eq__	src/lura/render/document.py	/^    def __eq__(self, other): return self.m_data==other.m_data$/;"	m	class:PdfDocument
__hash__	src/lura/render/document.py	/^    def __hash__(self): return hash(self.m_data)$/;"	m	class:PdfDocument
__init__	src/lura/cli.py	/^    def __init__(self):$/;"	m	class:LuraCLI
__init__	src/lura/main.py	/^    def __init__(self, **kwargs): $/;"	m	class:Lura
__init__	src/lura/render/annotation.py	/^    def __init__(self, annotationData):$/;"	m	class:PdfAnnotation
__init__	src/lura/render/document.py	/^    def __init__(self, filePath):$/;"	m	class:PdfDocument
__init__	src/lura/render/page.py	/^    def __init__(self, popplerPage, pageNumber, document):$/;"	m	class:PdfPage
__init__	src/lura/utils/buffer.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:Buffer
__init__	src/lura/utils/hashman.py	/^    def __init__(self, parent):$/;"	m	class:Hashman
__init__	src/lura/view/cursor.py	/^    def __init__(self, view): $/;"	m	class:Cursor
__init__	src/lura/view/layout.py	/^    def __init__(self, documentView):$/;"	m	class:DocumentLayout
__init__	src/lura/view/layout.py	/^    def __init__(self, settings):$/;"	m	class:SinglePageLayout
__init__	src/lura/view/pageitem.py	/^    def __init__(self, page, view):$/;"	m	class:PageItem
__init__	src/lura/view/rendertask.py	/^    def __init__(self, parent):$/;"	m	class:RenderTask
__init__	src/lura/view/tileitem.py	/^    def __init__(self, parent):$/;"	m	class:TileItem
__init__	src/lura/view/view.py	/^    def __init__(self, app, layout=DocumentLayout):$/;"	m	class:View
aData	src/lura/render/annotation.py	/^    def aData(self): return self.m_aData$/;"	m	class:PdfAnnotation
actionRegistered	src/lura/main.py	/^    actionRegistered=QtCore.pyqtSignal()$/;"	v	class:Lura
activateRubberBand	src/lura/view/view.py	/^    def activateRubberBand(self, listener=None):$/;"	m	class:View
addHighlightAnnotation	src/lura/render/page.py	/^    def addHighlightAnnotation(self, boundary, color):$/;"	m	class:PdfPage
addProxy	src/lura/view/pageitem.py	/^    def addProxy(self, position, widget, hideOverlay):$/;"	m	class:PageItem
addTextAnnotation	src/lura/render/page.py	/^    def addTextAnnotation(self, boundary, color):$/;"	m	class:PdfPage
adjustScrollBarPolicy	src/lura/view/view.py	/^    def adjustScrollBarPolicy(self):$/;"	m	class:View
annotate	src/lura/render/page.py	/^    def annotate(self, aData, kind, **kwargs):$/;"	m	class:PdfPage
annotationAdded	src/lura/render/page.py	/^    annotationAdded=QtCore.pyqtSignal(object)$/;"	v	class:PdfPage
annotationAdded	src/lura/utils/display.py	/^    annotationAdded=QtCore.pyqtSignal(object)$/;"	v	class:Display
annotationAdded	src/lura/view/view.py	/^    annotationAdded=QtCore.pyqtSignal(object)$/;"	v	class:View
annotationCreated	src/lura/utils/display.py	/^    annotationCreated=QtCore.pyqtSignal(object)$/;"	v	class:Display
annotationRegistered	src/lura/utils/display.py	/^    annotationRegistered=QtCore.pyqtSignal(object)$/;"	v	class:Display
annotationRemoved	src/lura/render/page.py	/^    annotationRemoved=QtCore.pyqtSignal(object)$/;"	v	class:PdfPage
annotationRemoved	src/lura/view/view.py	/^    annotationRemoved=QtCore.pyqtSignal(object)$/;"	v	class:View
annotations	src/lura/render/document.py	/^    def annotations(self):$/;"	m	class:PdfDocument
annotations	src/lura/render/page.py	/^    def annotations(self): return self.m_annotations$/;"	m	class:PdfPage
app	test/test_plug_intents.py	/^def app(): $/;"	f
author	src/lura/render/document.py	/^    def author(self): return self.m_data.author()$/;"	m	class:PdfDocument
boundary	src/lura/render/annotation.py	/^    def boundary(self): return self.m_aData['data'].boundary()$/;"	m	class:PdfAnnotation
boundingRect	src/lura/view/pageitem.py	/^    def boundingRect(self):$/;"	m	class:PageItem
cacheKey	src/lura/view/tileitem.py	/^    def cacheKey(self):$/;"	m	class:TileItem
cancel	src/lura/view/rendertask.py	/^    def cancel(self, force=False):$/;"	m	class:RenderTask
cancelRender	src/lura/view/pageitem.py	/^    def cancelRender(self):$/;"	m	class:PageItem
cancelRender	src/lura/view/tileitem.py	/^    def cancelRender(self):$/;"	m	class:TileItem
cleanUp	src/lura/view/view.py	/^    def cleanUp(self):$/;"	m	class:View
color	src/lura/render/annotation.py	/^    def color(self): return self.m_aData['data'].style().color().name()$/;"	m	class:PdfAnnotation
connect	src/lura/view/view.py	/^    def connect(self):$/;"	m	class:View
contains	src/lura/render/annotation.py	/^    def contains(self, point):$/;"	m	class:PdfAnnotation
contents	src/lura/render/annotation.py	/^    def contents(self): return self.m_data.contents()$/;"	m	class:PdfAnnotation
continuousModeChanged	src/lura/view/view.py	/^    continuousModeChanged = QtCore.pyqtSignal(bool, object)$/;"	v	class:View
cropRectChanged	src/lura/view/pageitem.py	/^    cropRectChanged = pyqtSignal()$/;"	v	class:PageItem
currentPage	src/lura/view/layout.py	/^    def currentPage(self, page): $/;"	m	class:DocumentLayout
currentPage	src/lura/view/layout.py	/^    def currentPage(self, page): return page$/;"	m	class:SinglePageLayout
currentPage	src/lura/view/view.py	/^    def currentPage(self): return self.m_currentPage$/;"	m	class:View
data	src/lura/render/annotation.py	/^    def data(self): return self.m_aData['data']$/;"	m	class:PdfAnnotation
data	src/lura/render/page.py	/^    def data(self): return self.m_data$/;"	m	class:PdfPage
deleteAfterRender	src/lura/view/tileitem.py	/^    def deleteAfterRender(self):$/;"	m	class:TileItem
devicePixelRatio	src/lura/view/pageitem.py	/^    def devicePixelRatio(self):$/;"	m	class:PageItem
displayedHeight	src/lura/view/pageitem.py	/^    def displayedHeight(self):$/;"	m	class:PageItem
displayedWidth	src/lura/view/pageitem.py	/^    def displayedWidth(self):$/;"	m	class:PageItem
document	src/lura/render/page.py	/^    def document(self): return self.m_document$/;"	m	class:PdfPage
down	src/lura/view/view.py	/^    def down(self):$/;"	m	class:View
dropCachedPixmaps	src/lura/view/tileitem.py	/^    def dropCachedPixmaps(self, page):$/;"	m	class:TileItem
dropObsoletePixmap	src/lura/view/tileitem.py	/^    def dropObsoletePixmap(self):$/;"	m	class:TileItem
dropPixmap	src/lura/view/tileitem.py	/^    def dropPixmap(self):$/;"	m	class:TileItem
filePath	src/lura/render/document.py	/^    def filePath(self): return self.m_filePath$/;"	m	class:PdfDocument
find	src/lura/render/page.py	/^    def find(self, rect, unified=False): $/;"	m	class:PdfPage
finish	src/lura/view/rendertask.py	/^    def finish(self):$/;"	m	class:RenderTask
finished	src/lura/view/rendertask.py	/^    finished = pyqtSignal()$/;"	v	class:RenderTask
fitToPageHeight	src/lura/view/view.py	/^    def fitToPageHeight(self):$/;"	m	class:View
fitToPageWidth	src/lura/view/view.py	/^    def fitToPageWidth(self):$/;"	m	class:View
fromLayoutMode	src/lura/view/layout.py	/^    def fromLayoutMode(self, layoutMode):$/;"	m	class:DocumentLayout
getActions	src/lura/main.py	/^    def getActions(self):$/;"	m	class:Lura
getBoundaries	src/lura/utils/position.py	/^def getBoundaries(position):$/;"	f
getHash	src/lura/utils/hashman.py	/^    def getHash(self, path):$/;"	m	class:Hashman
getNativeAnnotations	src/lura/render/page.py	/^    def getNativeAnnotations(self):$/;"	m	class:PdfPage
getPosition	src/lura/utils/position.py	/^def getPosition(boundaries):$/;"	f
getRow	src/lura/render/page.py	/^    def getRow(self, point):$/;"	m	class:PdfPage
getRows	src/lura/render/page.py	/^    def getRows(self, start, end):$/;"	m	class:PdfPage
goto	src/lura/view/view.py	/^    def goto(self, page, changeLeft=0., changeTop=0.):$/;"	m	class:View
gotoBegin	src/lura/view/view.py	/^    def gotoBegin(self): self.goto(1)$/;"	m	class:View
gotoEnd	src/lura/view/view.py	/^    def gotoEnd(self): self.goto(len(self.m_pages))$/;"	m	class:View
handle	src/lura/main.py	/^    def handle(self, request):$/;"	m	class:Lura
hash	src/lura/render/document.py	/^    def hash(self): return self.m_hash$/;"	m	class:PdfDocument
hashChanged	src/lura/utils/buffer.py	/^    hashChanged=QtCore.pyqtSignal(object)$/;"	v	class:Buffer
hashed	src/lura/utils/hashman.py	/^    hashed=QtCore.pyqtSignal(str, str)$/;"	v	class:Hashman
hideOverlay	src/lura/view/pageitem.py	/^    def hideOverlay(self, overlay, deleteLater=False):$/;"	m	class:PageItem
hoverMoveEvent	src/lura/view/pageitem.py	/^    def hoverMoveEvent(self, event):$/;"	m	class:PageItem
hoverMoveOccured	src/lura/view/pageitem.py	/^    hoverMoveOccured=pyqtSignal(object, object)$/;"	v	class:PageItem
id	src/lura/render/annotation.py	/^    def id(self): return self.m_aData.get('id', None)$/;"	m	class:PdfAnnotation
id	src/lura/render/document.py	/^    def id(self): return self.m_id$/;"	m	class:PdfDocument
imageReady	src/lura/view/rendertask.py	/^    imageReady = pyqtSignal('QRect', bool, 'QImage')$/;"	v	class:RenderTask
isNotEmptyPixmap	src/lura/view/tileitem.py	/^    def isNotEmptyPixmap(self, pixmap):$/;"	m	class:TileItem
isRunning	src/lura/view/rendertask.py	/^    def isRunning(self):$/;"	m	class:RenderTask
itemPainted	src/lura/view/pageitem.py	/^    itemPainted=pyqtSignal(object, object, object, object)$/;"	v	class:PageItem
layoutMode	src/lura/view/layout.py	/^    def layoutMode(self): return self.m_layoutMode$/;"	m	class:DocumentLayout
left	src/lura/view/view.py	/^    def left(self):$/;"	m	class:View
leftIndex	src/lura/view/layout.py	/^    def leftIndex(self, index): $/;"	m	class:DocumentLayout
leftIndex	src/lura/view/layout.py	/^    def leftIndex(self, index): return index$/;"	m	class:SinglePageLayout
linkClicked	src/lura/view/pageitem.py	/^    linkClicked = pyqtSignal(bool, int, float, float)$/;"	v	class:PageItem
links	src/lura/render/page.py	/^    def links(self):$/;"	m	class:PdfPage
load	src/lura/utils/buffer.py	/^    def load(self, path):$/;"	m	class:Buffer
loadDocument	src/lura/render/document.py	/^    def loadDocument(self, filePath):$/;"	m	class:PdfDocument
loadOutline	src/lura/render/document.py	/^    def loadOutline(self):$/;"	m	class:PdfDocument
loop	src/lura/utils/hashman.py	/^    def loop(self):$/;"	m	class:Hashman
mapToItem	src/lura/view/pageitem.py	/^    def mapToItem(self, polygon, isUnified=False):$/;"	m	class:PageItem
mapToPage	src/lura/view/pageitem.py	/^    def mapToPage(self, polygon, unify=True):$/;"	m	class:PageItem
modeAction	src/lura/cli.py	/^    def modeAction(self, mode, action, request={}):$/;"	m	class:LuraCLI
mouseDoubleClick	src/lura/view/pageitem.py	/^    mouseDoubleClick=pyqtSignal(int, 'QPointF')$/;"	v	class:PageItem
mouseDoubleClickEvent	src/lura/view/pageitem.py	/^    def mouseDoubleClickEvent(self, event):$/;"	m	class:PageItem
mouseDoubleClickOccured	src/lura/view/pageitem.py	/^    mouseDoubleClickOccured=pyqtSignal(object, object)$/;"	v	class:PageItem
mouseMoveEvent	src/lura/view/pageitem.py	/^    def mouseMoveEvent(self, event):$/;"	m	class:PageItem
mouseMoveOccured	src/lura/view/pageitem.py	/^    mouseMoveOccured=pyqtSignal(object, object)$/;"	v	class:PageItem
mousePressEvent	src/lura/view/pageitem.py	/^    def mousePressEvent(self, event):$/;"	m	class:PageItem
mousePressOccured	src/lura/view/pageitem.py	/^    mousePressOccured=pyqtSignal(object, object)$/;"	v	class:PageItem
mouseReleaseEvent	src/lura/view/pageitem.py	/^    def mouseReleaseEvent(self, event):$/;"	m	class:PageItem
mouseReleaseOccured	src/lura/view/pageitem.py	/^    mouseReleaseOccured=pyqtSignal(object, object)$/;"	v	class:PageItem
move	src/lura/view/cursor.py	/^    def move(self, event, item):$/;"	m	class:Cursor
name	src/lura/view/pageitem.py	/^    def name(self): $/;"	m	class:PageItem
name	src/lura/view/view.py	/^    def name(self):$/;"	m	class:View
nativeAnnotations	src/lura/render/document.py	/^    def nativeAnnotations(self):$/;"	m	class:PdfDocument
nativeAnnotations	src/lura/render/page.py	/^    def nativeAnnotations(self): return self.m_native_annotations$/;"	m	class:PdfPage
next	src/lura/view/view.py	/^    def next(self): $/;"	m	class:View
nextPage	src/lura/view/layout.py	/^    def nextPage(self, page, count): $/;"	m	class:DocumentLayout
nextPage	src/lura/view/layout.py	/^    def nextPage(self, page, count): return min(page+1, count)$/;"	m	class:SinglePageLayout
numberOfPages	src/lura/render/document.py	/^    def numberOfPages(self): return self.m_data.numPages()$/;"	m	class:PdfDocument
on_annotationChanged	src/lura/view/view.py	/^    def on_annotationChanged(self, page):$/;"	m	class:View
on_doubleClick	src/lura/view/cursor.py	/^    def on_doubleClick(self, view, item, event):$/;"	m	class:Cursor
on_mouseMove	src/lura/view/cursor.py	/^    def on_mouseMove(self, view, item, event): self.move(event, item)$/;"	m	class:Cursor
on_mousePress	src/lura/view/cursor.py	/^    def on_mousePress(self, view, item, event):$/;"	m	class:Cursor
on_mouseRelease	src/lura/view/cursor.py	/^    def on_mouseRelease(self, view, item, event): item.setCursor(item.prev_cursor)$/;"	m	class:Cursor
on_renderTask_finished	src/lura/view/tileitem.py	/^    def on_renderTask_finished(self):$/;"	m	class:TileItem
on_renderTask_imageReady	src/lura/view/tileitem.py	/^    def on_renderTask_imageReady(self, rect, prefetch, image):$/;"	m	class:TileItem
on_verticalScrollBar_valueChaged	src/lura/view/view.py	/^    def on_verticalScrollBar_valueChaged(self, int): pass$/;"	m	class:View
outline	src/lura/render/document.py	/^    def outline(self, document, node, parent):$/;"	m	class:PdfDocument
page	src/lura/render/annotation.py	/^    def page(self): return self.m_page$/;"	m	class:PdfAnnotation
page	src/lura/render/document.py	/^    def page(self, pageNumber): return self.m_pages.get(pageNumber, None)$/;"	m	class:PdfDocument
page	src/lura/view/pageitem.py	/^    def page(self): return self.m_page$/;"	m	class:PageItem
page	src/lura/view/rendertask.py	/^    def page(self):$/;"	m	class:RenderTask
pageDown	src/lura/view/view.py	/^    def pageDown(self):$/;"	m	class:View
pageItem	src/lura/render/page.py	/^    def pageItem(self): return self.m_pageItem$/;"	m	class:PdfPage
pageItem	src/lura/view/rendertask.py	/^    def pageItem(self):$/;"	m	class:RenderTask
pageItem	src/lura/view/tileitem.py	/^    def pageItem(self): return self.m_parent$/;"	m	class:TileItem
pageItem	src/lura/view/view.py	/^    def pageItem(self, index=None):$/;"	m	class:View
pageItems	src/lura/view/view.py	/^    def pageItems(self): return self.m_pageItems$/;"	m	class:View
pageNumber	src/lura/render/page.py	/^    def pageNumber(self): return self.m_pageNumber$/;"	m	class:PdfPage
pageUp	src/lura/view/view.py	/^    def pageUp(self):$/;"	m	class:View
pages	src/lura/render/document.py	/^    def pages(self): return self.m_pages$/;"	m	class:PdfDocument
paint	src/lura/view/pageitem.py	/^    def paint(self, painter, options, widgets):$/;"	m	class:PageItem
paint	src/lura/view/tileitem.py	/^    def paint(self, painter, topLeft):$/;"	m	class:TileItem
paintLinks	src/lura/view/view.py	/^    def paintLinks(self): return self.m_paintlinks$/;"	m	class:View
paintPage	src/lura/view/pageitem.py	/^    def paintPage(self, painter, exposedRect):$/;"	m	class:PageItem
paintSearch	src/lura/view/pageitem.py	/^    def paintSearch(self, painter, options, widgets):$/;"	m	class:PageItem
paintSelection	src/lura/view/pageitem.py	/^    def paintSelection(self, painter, options, widgets):$/;"	m	class:PageItem
parse	src/lura/main.py	/^    def parse(self):$/;"	m	class:Lura
position	src/lura/render/annotation.py	/^    def position(self):$/;"	m	class:PdfAnnotation
prepareGeometry	src/lura/view/pageitem.py	/^    def prepareGeometry(self):$/;"	m	class:PageItem
prepareLayout	src/lura/view/layout.py	/^    def prepareLayout(self, $/;"	m	class:DocumentLayout
prepareLayout	src/lura/view/layout.py	/^    def prepareLayout(self, $/;"	m	class:SinglePageLayout
preparePages	src/lura/view/view.py	/^    def preparePages(self):$/;"	m	class:View
prepareScene	src/lura/view/view.py	/^    def prepareScene(self, w, h):$/;"	m	class:View
prepareTiling	src/lura/view/pageitem.py	/^    def prepareTiling(self):$/;"	m	class:PageItem
prepareView	src/lura/view/view.py	/^    def prepareView(self, changeLeft=0., changeTop=0., visiblePage=0):$/;"	m	class:View
prev	src/lura/view/view.py	/^    def prev(self):$/;"	m	class:View
previousPage	src/lura/view/layout.py	/^    def previousPage(self, page, count): $/;"	m	class:DocumentLayout
previousPage	src/lura/view/layout.py	/^    def previousPage(self, page, count): return max(page-1, 1)$/;"	m	class:SinglePageLayout
proxyPadding	src/lura/view/pageitem.py	/^    def proxyPadding(self):$/;"	m	class:PageItem
pytest cache directory	.pytest_cache/README.md	/^# pytest cache directory #$/;"	c
pytest cache directory	test/.pytest_cache/README.md	/^# pytest cache directory #$/;"	c
readFilepath	src/lura/render/document.py	/^    def readFilepath(self, filePath):$/;"	m	class:PdfDocument
readSuccess	src/lura/render/document.py	/^    def readSuccess(self): return self.m_data is not None$/;"	m	class:PdfDocument
readjust	src/lura/view/view.py	/^    def readjust(self):$/;"	m	class:View
rect	src/lura/view/tileitem.py	/^    def rect(self):$/;"	m	class:TileItem
redraw	src/lura/view/pageitem.py	/^    def redraw(self, refresh=False):$/;"	m	class:PageItem
refresh	src/lura/view/pageitem.py	/^    def refresh(self, dropCachedPixmap=False):$/;"	m	class:PageItem
refresh	src/lura/view/tileitem.py	/^    def refresh(self, dropCachedPixmap=False):$/;"	m	class:TileItem
refresh	src/lura/view/view.py	/^    def refresh(self):$/;"	m	class:View
registerByUmay	src/lura/main.py	/^    def registerByUmay(self, path=None, kind=None):$/;"	m	class:Lura
removeAnnotation	src/lura/render/page.py	/^    def removeAnnotation(self, aData):$/;"	m	class:PdfPage
render	src/lura/render/page.py	/^    def render(self, hResol=72, vResol=72, rotate=0, boundingRect=None):$/;"	m	class:PdfPage
resizeEvent	src/lura/view/view.py	/^    def resizeEvent(self, event):$/;"	m	class:View
revert	src/lura/view/tileitem.py	/^    def revert(self, image):$/;"	m	class:TileItem
right	src/lura/view/view.py	/^    def right(self):$/;"	m	class:View
rightIndex	src/lura/view/layout.py	/^    def rightIndex(self, index, count): $/;"	m	class:DocumentLayout
rightIndex	src/lura/view/layout.py	/^    def rightIndex(self, index, count): return index$/;"	m	class:SinglePageLayout
rotation	src/lura/view/pageitem.py	/^    def rotation(self):$/;"	m	class:PageItem
run	src/lura/cli.py	/^    def run(self):$/;"	m	class:LuraCLI
run	src/lura/cli.py	/^def run():$/;"	f
run	src/lura/main.py	/^def run():$/;"	f
run	src/lura/view/rendertask.py	/^    def run(self):$/;"	m	class:RenderTask
save	src/lura/render/document.py	/^    def save(self, filePath, withChanges):$/;"	m	class:PdfDocument
save	src/lura/view/view.py	/^    def save(self, filePath=False, withChanges=True):$/;"	m	class:View
saveLeftAndTop	src/lura/view/view.py	/^    def saveLeftAndTop(self, left=0., top=0.):$/;"	m	class:View
scale	src/lura/view/pageitem.py	/^    def scale(self):$/;"	m	class:PageItem
scaleFactorChanged	src/lura/view/view.py	/^    scaleFactorChanged = QtCore.pyqtSignal(object, object)$/;"	v	class:View
scaleMode	src/lura/view/view.py	/^    def scaleMode(self):$/;"	m	class:View
scaleModeChanged	src/lura/view/view.py	/^    scaleModeChanged = QtCore.pyqtSignal(object, object)$/;"	v	class:View
scaledResolutionX	src/lura/view/pageitem.py	/^    def scaledResolutionX(self): return self.scale()*self.devicePixelRatio()*self.xresol()$/;"	m	class:PageItem
scaledResolutionY	src/lura/view/pageitem.py	/^    def scaledResolutionY(self): return self.scale()*self.devicePixelRatio()*self.yresol()$/;"	m	class:PageItem
search	src/lura/render/document.py	/^    def search(self, text):$/;"	m	class:PdfDocument
search	src/lura/render/page.py	/^    def search(self, string): $/;"	m	class:PdfPage
select	src/lura/view/pageitem.py	/^    def select(self, selections=[]):$/;"	m	class:PageItem
setAData	src/lura/render/annotation.py	/^    def setAData(self, data): self.m_aData=data$/;"	m	class:PdfAnnotation
setActions	src/lura/view/pageitem.py	/^    def setActions(self, actions):$/;"	m	class:PageItem
setAutoDelete	src/lura/view/rendertask.py	/^    def setAutoDelete(self, condition):$/;"	m	class:RenderTask
setBlock	src/lura/view/pageitem.py	/^    def setBlock(self, blocks=[]): raise$/;"	m	class:PageItem
setColor	src/lura/render/annotation.py	/^    def setColor(self, color):$/;"	m	class:PdfAnnotation
setConnection	src/lura/cli.py	/^    def setConnection(self): $/;"	m	class:LuraCLI
setConnection	src/lura/main.py	/^    def setConnection(self): $/;"	m	class:Lura
setCurrentPage	src/lura/view/view.py	/^    def setCurrentPage(self, pageNumber):$/;"	m	class:View
setCurrentPageFromVisiblePages	src/lura/view/view.py	/^    def setCurrentPageFromVisiblePages(self):$/;"	m	class:View
setHash	src/lura/render/document.py	/^    def setHash(self, dhash): self.m_hash=dhash$/;"	m	class:PdfDocument
setHash	src/lura/utils/buffer.py	/^    def setHash(self, path, dhash):$/;"	m	class:Buffer
setHashman	src/lura/utils/buffer.py	/^    def setHashman(self):$/;"	m	class:Buffer
setId	src/lura/render/annotation.py	/^    def setId(self, m_id): $/;"	m	class:PdfAnnotation
setId	src/lura/render/document.py	/^    def setId(self, m_id): self.m_id=m_id$/;"	m	class:PdfDocument
setModel	src/lura/view/view.py	/^    def setModel(self, model):$/;"	m	class:View
setPage	src/lura/render/annotation.py	/^    def setPage(self, page): self.m_page=page$/;"	m	class:PdfAnnotation
setPageItem	src/lura/render/page.py	/^    def setPageItem(self, pageItem): self.m_pageItem=pageItem$/;"	m	class:PdfPage
setPages	src/lura/render/document.py	/^    def setPages(self, m_data):$/;"	m	class:PdfDocument
setPaintLinks	src/lura/view/view.py	/^    def setPaintLinks(self, condition=True):$/;"	m	class:View
setParser	src/lura/cli.py	/^    def setParser(self):$/;"	m	class:LuraCLI
setParser	src/lura/main.py	/^    def setParser(self):$/;"	m	class:Lura
setProxyGeometry	src/lura/view/pageitem.py	/^    def setProxyGeometry(self, position, proxy):$/;"	m	class:PageItem
setRect	src/lura/view/tileitem.py	/^    def setRect(self, rect):$/;"	m	class:TileItem
setResolution	src/lura/view/pageitem.py	/^    def setResolution(self, resolutionX, resolutionY):$/;"	m	class:PageItem
setRotation	src/lura/view/pageitem.py	/^    def setRotation(self, rotation):$/;"	m	class:PageItem
setScaleFactor	src/lura/view/pageitem.py	/^    def setScaleFactor(self, scaleFactor):$/;"	m	class:PageItem
setScaleFactor	src/lura/view/view.py	/^    def setScaleFactor(self, scaleFactor):$/;"	m	class:View
setScaleMode	src/lura/view/view.py	/^    def setScaleMode(self, scaleMode):$/;"	m	class:View
setSearched	src/lura/view/pageitem.py	/^    def setSearched(self, searched=[]): self.m_searched=searched$/;"	m	class:PageItem
setXResol	src/lura/view/pageitem.py	/^    def setXResol(self, xresol):$/;"	m	class:PageItem
setYResol	src/lura/view/pageitem.py	/^    def setYResol(self, yresol):$/;"	m	class:PageItem
settings	src/lura/view/settings.py	/^settings={$/;"	v
settings	src/lura/view/view.py	/^    def settings(self): return self.s_settings$/;"	m	class:View
setup	src/lura/main.py	/^    def setup(self): $/;"	m	class:Lura
setup	src/lura/view/pageitem.py	/^    def setup(self):$/;"	m	class:PageItem
setup	src/lura/view/rendertask.py	/^    def setup(self):$/;"	m	class:RenderTask
setup	src/lura/view/tileitem.py	/^    def setup(self):$/;"	m	class:TileItem
show	src/lura/view/view.py	/^    def show(self):$/;"	m	class:View
showOverlay	src/lura/view/pageitem.py	/^    def showOverlay(self, $/;"	m	class:PageItem
size	src/lura/render/page.py	/^    def size(self): return self.m_data.pageSizeF()$/;"	m	class:PdfPage
size	src/lura/view/pageitem.py	/^    def size(self): return self.m_size$/;"	m	class:PageItem
start	src/lura/view/rendertask.py	/^    def start(self, rect, prefetch):$/;"	m	class:RenderTask
startRender	src/lura/view/pageitem.py	/^    def startRender(self, prefetch):$/;"	m	class:PageItem
startRender	src/lura/view/tileitem.py	/^    def startRender(self, prefetch=False):$/;"	m	class:TileItem
takePixmap	src/lura/view/tileitem.py	/^    def takePixmap(self):$/;"	m	class:TileItem
test_app_initiated	test/test_plug_intents.py	/^def test_app_initiated(app): $/;"	f
test_intent_and_entity_properties	test/test_plug_intents.py	/^def test_intent_and_entity_properties(app):$/;"	f
test_intents_are_none	test/test_plug_intents.py	/^def test_intents_are_none(app):$/;"	f
textList	src/lura/render/page.py	/^    def textList(self): return self.data().textList()$/;"	m	class:PdfPage
title	src/lura/render/document.py	/^    def title(self): return self.m_data.title()$/;"	m	class:PdfDocument
toggleContinuousMode	src/lura/view/view.py	/^    def toggleContinuousMode(self):$/;"	m	class:View
toggleCursor	src/lura/view/view.py	/^    def toggleCursor(self):$/;"	m	class:View
totalPages	src/lura/view/view.py	/^    def totalPages(self): return len(self.m_pages)$/;"	m	class:View
type	src/lura/render/annotation.py	/^    def type(self): return self.m_aData['data'].subType()$/;"	m	class:PdfAnnotation
up	src/lura/view/view.py	/^    def up(self):$/;"	m	class:View
update	src/lura/view/view.py	/^    def update(self, refresh=False):$/;"	m	class:View
updateAll	src/lura/view/view.py	/^    def updateAll(self, refresh=False):$/;"	m	class:View
updateSceneAndView	src/lura/view/view.py	/^    def updateSceneAndView(self, left=0., top=0.):$/;"	m	class:View
view	src/lura/view/pageitem.py	/^    def view(self): return self.m_view$/;"	m	class:PageItem
visibleHeight	src/lura/view/layout.py	/^    def visibleHeight(self, viewportHeight):$/;"	m	class:DocumentLayout
visibleWidth	src/lura/view/layout.py	/^    def visibleWidth(self, viewportWidth): $/;"	m	class:DocumentLayout
visibleWidth	src/lura/view/layout.py	/^    def visibleWidth(self, viewportWidth):$/;"	m	class:SinglePageLayout
wait	src/lura/view/rendertask.py	/^    def wait(self):$/;"	m	class:RenderTask
wasCanceled	src/lura/view/rendertask.py	/^    def wasCanceled(self):$/;"	m	class:RenderTask
wasCanceledForcibly	src/lura/view/rendertask.py	/^    def wasCanceledForcibly(self):$/;"	m	class:RenderTask
wasCanceledNormally	src/lura/view/rendertask.py	/^    def wasCanceledNormally(self):$/;"	m	class:RenderTask
wasModified	src/lura/view/pageitem.py	/^    wasModified = pyqtSignal()$/;"	v	class:PageItem
wheelEvent	src/lura/view/view.py	/^    def wheelEvent(self, event):$/;"	m	class:View
xresol	src/lura/view/pageitem.py	/^    def xresol(self):$/;"	m	class:PageItem
yresol	src/lura/view/pageitem.py	/^    def yresol(self):$/;"	m	class:PageItem
zoom	src/lura/view/view.py	/^    def zoom(self, kind='out'):$/;"	m	class:View
